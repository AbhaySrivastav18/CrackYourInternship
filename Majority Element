/*Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 */

 class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int> mp;
        int n=nums.size();
        int element = 0;
        for(int i=0;i<n;i++){
            mp[nums[i]]++;
        }

        for(auto &num : mp){
            if(num.second > n/2){
                element = num.first;
                break;
            }
        }
        return element;
    }
};